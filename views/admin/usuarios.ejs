<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Gestión de Usuarios - Panel Admin</title>
    
    <!-- Tailwind CSS Local -->
    <link rel="stylesheet" href="/css/tailwind.css">
    <!-- Admin CSS Personalizado -->
    <link rel="stylesheet" href="/css/admin.css">
    <!-- FontAwesome -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <!-- SweetAlert2 -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <!-- Google Fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800&display=swap" rel="stylesheet">
    
    <!-- Estilos personalizados para SweetAlert2 -->
    <style>
        .swal2-popup-modern {
            border-radius: 20px !important;
            box-shadow: 0 25px 50px rgba(0, 0, 0, 0.25) !important;
            border: none !important;
            overflow: hidden !important;
        }
        
        .swal2-title-modern {
            display: none !important;
        }
        
        .swal2-html-container-modern {
            margin: 0 !important;
            padding: 0 !important;
        }
        
        .swal2-confirm-modern {
            background: linear-gradient(135deg, #e53e3e, #c53030) !important;
            border: none !important;
            border-radius: 12px !important;
            padding: 12px 24px !important;
            font-weight: 600 !important;
            font-size: 14px !important;
            box-shadow: 0 4px 15px rgba(229, 62, 62, 0.4) !important;
            transition: all 0.3s ease !important;
        }
        
        .swal2-confirm-modern:hover {
            background: linear-gradient(135deg, #c53030, #9c2626) !important;
            transform: translateY(-2px) !important;
            box-shadow: 0 6px 20px rgba(229, 62, 62, 0.5) !important;
        }
        
        .swal2-cancel-modern {
            background: linear-gradient(135deg, #718096, #4a5568) !important;
            border: none !important;
            border-radius: 12px !important;
            padding: 12px 24px !important;
            font-weight: 600 !important;
            font-size: 14px !important;
            box-shadow: 0 4px 15px rgba(113, 128, 150, 0.3) !important;
            transition: all 0.3s ease !important;
        }
        
        .swal2-cancel-modern:hover {
            background: linear-gradient(135deg, #4a5568, #2d3748) !important;
            transform: translateY(-2px) !important;
            box-shadow: 0 6px 20px rgba(113, 128, 150, 0.4) !important;
        }
        
        .swal2-actions {
            gap: 12px !important;
            margin-top: 30px !important;
        }
        
        .swal2-backdrop {
            backdrop-filter: blur(8px) !important;
        }
    </style>
</head>
<body class="bg-utec-light font-inter">
    <!-- Navigation -->
    <nav class="admin-nav">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <div class="flex justify-between items-center h-20">
                <div class="nav-brand">
                    <div class="brand-icon">
                        <i class="fas fa-shield-alt text-white text-2xl"></i>
                    </div>
                    <div class="brand-text">
                        <h1>Panel Admin</h1>
                        <p>MATRICULATEC</p>
                    </div>
                </div>
                <div class="nav-user">
                    <div class="nav-actions">
                        <a href="/admin">
                            <i class="fas fa-home"></i>
                            <span>Inicio</span>
                        </a>
                        <a href="/dashboard">
                            <i class="fas fa-tachometer-alt"></i>
                            <span>Dashboard</span>
                        </a>
                        <a href="/auth/logout">
                            <i class="fas fa-sign-out-alt"></i>
                            <span>Salir</span>
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </nav>

    <!-- Main Content -->
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        <!-- Header -->
        <div class="welcome-section mb-8">
            <div class="welcome-content">
                <h1 class="welcome-title">
                    <i class="fas fa-users mr-4"></i>
                    Gestión de Usuarios
                </h1>
                <p class="welcome-subtitle">
                    Administra y gestiona todos los usuarios del sistema
                </p>
                <div class="welcome-info">
                    <div class="welcome-info-item">
                        <i class="fas fa-users"></i>
                        <span>Total de usuarios</span>
                    </div>
                    <div class="welcome-info-item">
                        <i class="fas fa-user-graduate"></i>
                        <span>Estudiantes activos</span>
                    </div>
                    <div class="welcome-info-item">
                        <i class="fas fa-user-shield"></i>
                        <span>Administradores</span>
                    </div>
                </div>
            </div>
        </div>

        <!-- Action Bar -->
        <div class="flex justify-between items-center mb-6">
            <div class="flex items-center gap-4">
                <div class="stat-card indigo">
                    <div class="flex items-center gap-4">
                        <div class="stat-icon indigo">
                            <i class="fas fa-users text-white text-xl"></i>
                        </div>
                        <div>
                            <p class="stat-number" id="total-users">-</p>
                            <p class="stat-label">Total Usuarios</p>
                        </div>
                    </div>
                </div>
            </div>
            <button id="nuevo-usuario-btn" class="btn-success">
                <i class="fas fa-user-plus"></i>
                Nuevo Usuario
            </button>
        </div>

        <!-- Filters and Search -->
        <div class="stat-card mb-6">
            <div class="flex items-center gap-4 mb-4">
                <div class="stat-icon indigo">
                    <i class="fas fa-filter text-white text-lg"></i>
                </div>
                <div>
                    <h3 class="stat-title">Filtros y Búsqueda</h3>
                    <p class="stat-description">Busca y filtra usuarios por diferentes criterios</p>
                </div>
            </div>
            <div class="grid grid-cols-1 md:grid-cols-4 gap-4">
                <div>
                    <label class="block text-sm font-medium text-slate-700 mb-2">
                        <i class="fas fa-search mr-2"></i>Buscar
                    </label>
                    <input type="text" id="search-input" placeholder="Nombre, email o cédula..." 
                           class="w-full px-3 py-2 border border-slate-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-transparent">
                </div>
                <div>
                    <label class="block text-sm font-medium text-slate-700 mb-2">
                        <i class="fas fa-user-tag mr-2"></i>Rol
                    </label>
                    <select id="rol-filter" class="w-full px-3 py-2 border border-slate-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-transparent">
                        <option value="">Todos los roles</option>
                        <option value="estudiante">Estudiante</option>
                        <option value="administrador">Administrador</option>
                    </select>
                </div>
                <div>
                    <label class="block text-sm font-medium text-slate-700 mb-2">
                        <i class="fas fa-toggle-on mr-2"></i>Estado
                    </label>
                    <select id="estado-filter" class="w-full px-3 py-2 border border-slate-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-transparent">
                        <option value="">Todos los estados</option>
                        <option value="activo">Activo</option>
                        <option value="inactivo">Inactivo</option>
                    </select>
                </div>
                <div class="flex items-end">
                    <button id="clear-filters" class="btn-secondary w-full">
                        <i class="fas fa-times"></i>
                        Limpiar
                    </button>
                </div>
            </div>
        </div>

        <!-- Users Table -->
        <div class="stat-card">
            <div class="flex items-center gap-4 mb-6">
                <div class="stat-icon emerald">
                    <i class="fas fa-table text-white text-lg"></i>
                </div>
                <div>
                    <h3 class="stat-title">Lista de Usuarios</h3>
                    <p class="stat-description">Gestiona todos los usuarios del sistema</p>
                </div>
            </div>
            <div class="overflow-x-auto">
                <table class="min-w-full divide-y divide-slate-200">
                    <thead class="bg-slate-50">
                        <tr>
                            <th class="px-6 py-3 text-left text-xs font-medium text-slate-500 uppercase tracking-wider">
                                <div class="flex items-center">
                                    <i class="fas fa-user mr-2"></i>
                                    <span>Usuario</span>
                                </div>
                            </th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-slate-500 uppercase tracking-wider">
                                <div class="flex items-center">
                                    <i class="fas fa-envelope mr-2"></i>
                                    <span>Email</span>
                                </div>
                            </th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-slate-500 uppercase tracking-wider">
                                <div class="flex items-center">
                                    <i class="fas fa-id-card mr-2"></i>
                                    <span>Cédula</span>
                                </div>
                            </th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-slate-500 uppercase tracking-wider">
                                <div class="flex items-center">
                                    <i class="fas fa-user-tag mr-2"></i>
                                    <span>Rol</span>
                                </div>
                            </th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-slate-500 uppercase tracking-wider">
                                <div class="flex items-center">
                                    <i class="fas fa-toggle-on mr-2"></i>
                                    <span>Estado</span>
                                </div>
                            </th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-slate-500 uppercase tracking-wider">
                                <div class="flex items-center">
                                    <i class="fas fa-clock mr-2"></i>
                                    <span>Último Acceso</span>
                                </div>
                            </th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-slate-500 uppercase tracking-wider">
                                <div class="flex items-center">
                                    <i class="fas fa-cogs mr-2"></i>
                                    <span>Acciones</span>
                                </div>
                            </th>
                        </tr>
                    </thead>
                    <tbody id="usuarios-table" class="bg-white divide-y divide-slate-200">
                        <!-- Los usuarios se cargarán aquí dinámicamente -->
                    </tbody>
                </table>
            </div>
            
            <!-- Pagination -->
            <div class="bg-white px-4 py-3 flex items-center justify-between border-t border-slate-200 sm:px-6 mt-4">
                <div class="flex-1 flex justify-between sm:hidden">
                    <button class="relative inline-flex items-center px-4 py-2 border border-slate-300 text-sm font-medium rounded-md text-slate-700 bg-white hover:bg-slate-50">
                        Anterior
                    </button>
                    <button class="ml-3 relative inline-flex items-center px-4 py-2 border border-slate-300 text-sm font-medium rounded-md text-slate-700 bg-white hover:bg-slate-50">
                        Siguiente
                    </button>
                </div>
                <div class="hidden sm:flex-1 sm:flex sm:items-center sm:justify-between">
                    <div>
                        <p class="text-sm text-slate-700">
                            Mostrando <span class="font-medium">1</span> a <span class="font-medium">10</span> de <span class="font-medium">97</span> resultados
                        </p>
                    </div>
                    <div>
                        <nav class="relative z-0 inline-flex rounded-md shadow-sm -space-x-px">
                            <button class="relative inline-flex items-center px-2 py-2 rounded-l-md border border-slate-300 bg-white text-sm font-medium text-slate-500 hover:bg-slate-50">
                                <i class="fas fa-chevron-left"></i>
                            </button>
                            <button class="relative inline-flex items-center px-4 py-2 border border-slate-300 bg-white text-sm font-medium text-slate-700 hover:bg-slate-50">
                                1
                            </button>
                            <button class="relative inline-flex items-center px-2 py-2 rounded-r-md border border-slate-300 bg-white text-sm font-medium text-slate-500 hover:bg-slate-50">
                                <i class="fas fa-chevron-right"></i>
                            </button>
                        </nav>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal para ver detalles del usuario -->
    <div id="user-modal" class="fixed inset-0 bg-slate-600 bg-opacity-50 overflow-y-auto h-full w-full hidden z-50">
        <div class="relative top-10 mx-auto p-0 border w-11/12 md:w-2/3 lg:w-1/2 xl:w-2/5 shadow-2xl rounded-2xl bg-white overflow-hidden">
            <div class="stat-card">
                <div class="flex justify-between items-center mb-6">
                    <div class="flex items-center gap-4">
                        <div class="stat-icon indigo">
                            <i class="fas fa-user text-white text-xl"></i>
                        </div>
                        <div>
                            <h3 class="stat-title">Detalles del Usuario</h3>
                            <p class="stat-description">Información completa del usuario</p>
                        </div>
                    </div>
                    <button id="close-modal" class="p-2 text-slate-400 hover:text-slate-600 hover:bg-slate-100 rounded-lg transition-colors">
                        <i class="fas fa-times text-xl"></i>
                    </button>
                </div>
                <div id="user-details" class="space-y-6">
                    <!-- Los detalles se cargarán aquí -->
                </div>
            </div>
        </div>
    </div>

    <!-- Modal para crear nuevo usuario -->
    <div id="nuevo-usuario-modal" class="fixed inset-0 bg-slate-600 bg-opacity-50 overflow-y-auto h-full w-full hidden z-50">
        <div class="relative top-10 mx-auto p-0 border w-11/12 md:w-2/3 lg:w-1/2 xl:w-2/5 shadow-2xl rounded-2xl bg-white overflow-hidden">
            <div class="stat-card">
                <div class="flex justify-between items-center mb-6">
                    <div class="flex items-center gap-4">
                        <div class="stat-icon emerald">
                            <i class="fas fa-user-plus text-white text-xl"></i>
                        </div>
                        <div>
                            <h3 class="stat-title">Crear Nuevo Usuario</h3>
                            <p class="stat-description">Registra un nuevo usuario en el sistema</p>
                        </div>
                    </div>
                    <button id="close-nuevo-modal" class="p-2 text-slate-400 hover:text-slate-600 hover:bg-slate-100 rounded-lg transition-colors">
                        <i class="fas fa-times text-xl"></i>
                    </button>
                </div>
                
                <form id="nuevo-usuario-form" class="space-y-6">
                    <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                        <!-- Nombre -->
                        <div>
                            <label for="nombre" class="block text-sm font-medium text-slate-700 mb-2">
                                <i class="fas fa-user mr-2"></i>Nombre *
                            </label>
                            <input type="text" id="nombre" name="nombre" required
                                   class="w-full px-3 py-2 border border-slate-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent"
                                   placeholder="Ingresa el nombre">
                        </div>
                        
                        <!-- Apellido -->
                        <div>
                            <label for="apellido" class="block text-sm font-medium text-slate-700 mb-2">
                                <i class="fas fa-user mr-2"></i>Apellido *
                            </label>
                            <input type="text" id="apellido" name="apellido" required
                                   class="w-full px-3 py-2 border border-slate-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent"
                                   placeholder="Ingresa el apellido">
                        </div>
                    </div>
                    
                    <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                        <!-- Email -->
                        <div>
                            <label for="email" class="block text-sm font-medium text-slate-700 mb-2">
                                <i class="fas fa-envelope mr-2"></i>Email *
                            </label>
                            <input type="email" id="email" name="email" required
                                   class="w-full px-3 py-2 border border-slate-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent"
                                   placeholder="usuario@ejemplo.com">
                        </div>
                        
                        <!-- Cédula -->
                        <div>
                            <label for="cedula" class="block text-sm font-medium text-slate-700 mb-2">
                                <i class="fas fa-id-card mr-2"></i>Cédula
                            </label>
                            <input type="text" id="cedula" name="cedula"
                                   class="w-full px-3 py-2 border border-slate-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent"
                                   placeholder="12345678">
                        </div>
                    </div>
                    
                    <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                        <!-- Contraseña -->
                        <div>
                            <label for="password" class="block text-sm font-medium text-slate-700 mb-2">
                                <i class="fas fa-lock mr-2"></i>Contraseña *
                            </label>
                            <input type="password" id="password" name="password" required
                                   class="w-full px-3 py-2 border border-slate-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent"
                                   placeholder="Mínimo 6 caracteres">
                        </div>
                        
                        <!-- Confirmar Contraseña -->
                        <div>
                            <label for="confirmPassword" class="block text-sm font-medium text-slate-700 mb-2">
                                <i class="fas fa-lock mr-2"></i>Confirmar Contraseña *
                            </label>
                            <input type="password" id="confirmPassword" name="confirmPassword" required
                                   class="w-full px-3 py-2 border border-slate-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent"
                                   placeholder="Repite la contraseña">
                        </div>
                    </div>
                    
                    <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                        <!-- Rol -->
                        <div>
                            <label for="rol" class="block text-sm font-medium text-slate-700 mb-2">
                                <i class="fas fa-user-tag mr-2"></i>Rol *
                            </label>
                            <select id="rol" name="rol" required
                                    class="w-full px-3 py-2 border border-slate-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent">
                                <option value="">Selecciona un rol</option>
                                <option value="estudiante">Estudiante</option>
                                <option value="administrador">Administrador</option>
                            </select>
                        </div>
                        
                        <!-- Estado -->
                        <div>
                            <label for="activo" class="block text-sm font-medium text-slate-700 mb-2">
                                <i class="fas fa-toggle-on mr-2"></i>Estado *
                            </label>
                            <select id="activo" name="activo" required
                                    class="w-full px-3 py-2 border border-slate-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-transparent">
                                <option value="true">Activo</option>
                                <option value="false">Inactivo</option>
                            </select>
                        </div>
                    </div>
                    
                    <!-- Mensaje de error -->
                    <div id="error-message" class="hidden bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded-lg">
                        <div class="flex items-center">
                            <i class="fas fa-exclamation-circle mr-2"></i>
                            <span id="error-text"></span>
                        </div>
                    </div>
                    
                    <!-- Mensaje de éxito -->
                    <div id="success-message" class="hidden bg-emerald-50 border border-emerald-200 text-emerald-700 px-4 py-3 rounded-lg">
                        <div class="flex items-center">
                            <i class="fas fa-check-circle mr-2"></i>
                            <span id="success-text"></span>
                        </div>
                    </div>
                    
                    <!-- Botones -->
                    <div class="flex justify-end gap-4 pt-4 border-t border-slate-200">
                        <button type="button" id="cancelar-nuevo" class="btn-secondary">
                            <i class="fas fa-times mr-2"></i>
                            Cancelar
                        </button>
                        <button type="submit" id="crear-usuario-btn" class="btn-success">
                            <i class="fas fa-user-plus mr-2"></i>
                            Crear Usuario
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Modal para editar usuario -->
    <div id="editar-usuario-modal" class="fixed inset-0 bg-slate-600 bg-opacity-50 overflow-y-auto h-full w-full hidden z-50">
        <div class="relative top-10 mx-auto p-0 border w-11/12 md:w-2/3 lg:w-1/2 xl:w-2/5 shadow-2xl rounded-2xl bg-white overflow-hidden">
            <div class="stat-card">
                <div class="flex justify-between items-center mb-6">
                    <div class="flex items-center gap-4">
                        <div class="stat-icon amber">
                            <i class="fas fa-user-edit text-white text-xl"></i>
                        </div>
                        <div>
                            <h3 class="stat-title">Editar Usuario</h3>
                            <p class="stat-description">Modifica la información del usuario</p>
                        </div>
                    </div>
                    <button id="close-editar-modal" class="p-2 text-slate-400 hover:text-slate-600 hover:bg-slate-100 rounded-lg transition-colors">
                        <i class="fas fa-times text-xl"></i>
                    </button>
                </div>
                
                <form id="editar-usuario-form" class="space-y-6">
                    <input type="hidden" id="editar-usuario-id" name="usuarioId">
                    
                    <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                        <!-- Nombre -->
                        <div>
                            <label for="editar-nombre" class="block text-sm font-medium text-slate-700 mb-2">
                                <i class="fas fa-user mr-2"></i>Nombre *
                            </label>
                            <input type="text" id="editar-nombre" name="nombre" required
                                   class="w-full px-3 py-2 border border-slate-300 rounded-lg focus:ring-2 focus:ring-amber-500 focus:border-transparent"
                                   placeholder="Ingresa el nombre">
                        </div>
                        
                        <!-- Apellido -->
                        <div>
                            <label for="editar-apellido" class="block text-sm font-medium text-slate-700 mb-2">
                                <i class="fas fa-user mr-2"></i>Apellido *
                            </label>
                            <input type="text" id="editar-apellido" name="apellido" required
                                   class="w-full px-3 py-2 border border-slate-300 rounded-lg focus:ring-2 focus:ring-amber-500 focus:border-transparent"
                                   placeholder="Ingresa el apellido">
                        </div>
                    </div>
                    
                    <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                        <!-- Email -->
                        <div>
                            <label for="editar-email" class="block text-sm font-medium text-slate-700 mb-2">
                                <i class="fas fa-envelope mr-2"></i>Email *
                            </label>
                            <input type="email" id="editar-email" name="email" required
                                   class="w-full px-3 py-2 border border-slate-300 rounded-lg focus:ring-2 focus:ring-amber-500 focus:border-transparent"
                                   placeholder="usuario@ejemplo.com">
                        </div>
                        
                        <!-- Cédula -->
                        <div>
                            <label for="editar-cedula" class="block text-sm font-medium text-slate-700 mb-2">
                                <i class="fas fa-id-card mr-2"></i>Cédula
                            </label>
                            <input type="text" id="editar-cedula" name="cedula"
                                   class="w-full px-3 py-2 border border-slate-300 rounded-lg focus:ring-2 focus:ring-amber-500 focus:border-transparent"
                                   placeholder="12345678">
                        </div>
                    </div>
                    
                    <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                        <!-- Contraseña -->
                        <div>
                            <label for="editar-password" class="block text-sm font-medium text-slate-700 mb-2">
                                <i class="fas fa-lock mr-2"></i>Nueva Contraseña
                            </label>
                            <input type="password" id="editar-password" name="password"
                                   class="w-full px-3 py-2 border border-slate-300 rounded-lg focus:ring-2 focus:ring-amber-500 focus:border-transparent"
                                   placeholder="Dejar vacío para mantener la actual">
                            <p class="text-xs text-slate-500 mt-1">Deja vacío si no quieres cambiar la contraseña</p>
                        </div>
                        
                        <!-- Confirmar Contraseña -->
                        <div>
                            <label for="editar-confirmPassword" class="block text-sm font-medium text-slate-700 mb-2">
                                <i class="fas fa-lock mr-2"></i>Confirmar Nueva Contraseña
                            </label>
                            <input type="password" id="editar-confirmPassword" name="confirmPassword"
                                   class="w-full px-3 py-2 border border-slate-300 rounded-lg focus:ring-2 focus:ring-amber-500 focus:border-transparent"
                                   placeholder="Repite la nueva contraseña">
                        </div>
                    </div>
                    
                    <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                        <!-- Rol -->
                        <div>
                            <label for="editar-rol" class="block text-sm font-medium text-slate-700 mb-2">
                                <i class="fas fa-user-tag mr-2"></i>Rol *
                            </label>
                            <select id="editar-rol" name="rol" required
                                    class="w-full px-3 py-2 border border-slate-300 rounded-lg focus:ring-2 focus:ring-amber-500 focus:border-transparent">
                                <option value="">Selecciona un rol</option>
                                <option value="estudiante">Estudiante</option>
                                <option value="administrador">Administrador</option>
                            </select>
                        </div>
                        
                        <!-- Estado -->
                        <div>
                            <label for="editar-activo" class="block text-sm font-medium text-slate-700 mb-2">
                                <i class="fas fa-toggle-on mr-2"></i>Estado *
                            </label>
                            <select id="editar-activo" name="activo" required
                                    class="w-full px-3 py-2 border border-slate-300 rounded-lg focus:ring-2 focus:ring-amber-500 focus:border-transparent">
                                <option value="true">Activo</option>
                                <option value="false">Inactivo</option>
                            </select>
                        </div>
                    </div>
                    
                    <!-- Mensaje de error -->
                    <div id="editar-error-message" class="hidden bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded-lg">
                        <div class="flex items-center">
                            <i class="fas fa-exclamation-circle mr-2"></i>
                            <span id="editar-error-text"></span>
                        </div>
                    </div>
                    
                    <!-- Mensaje de éxito -->
                    <div id="editar-success-message" class="hidden bg-emerald-50 border border-emerald-200 text-emerald-700 px-4 py-3 rounded-lg">
                        <div class="flex items-center">
                            <i class="fas fa-check-circle mr-2"></i>
                            <span id="editar-success-text"></span>
                        </div>
                    </div>
                    
                    <!-- Botones -->
                    <div class="flex justify-end gap-4 pt-4 border-t border-slate-200">
                        <button type="button" id="cancelar-editar" class="btn-secondary">
                            <i class="fas fa-times mr-2"></i>
                            Cancelar
                        </button>
                        <button type="submit" id="actualizar-usuario-btn" class="btn-warning">
                            <i class="fas fa-save mr-2"></i>
                            Actualizar Usuario
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>



    <!-- JavaScript -->
    <script>
        // Variables globales para filtros
        let todosLosUsuarios = [];
        let usuariosFiltrados = [];

        document.addEventListener('DOMContentLoaded', function() {
            cargarUsuarios();
            
            // Event listeners
            document.getElementById('search-input').addEventListener('input', filtrarUsuarios);
            document.getElementById('rol-filter').addEventListener('change', filtrarUsuarios);
            document.getElementById('estado-filter').addEventListener('change', filtrarUsuarios);
            document.getElementById('clear-filters').addEventListener('click', limpiarFiltros);
            document.getElementById('close-modal').addEventListener('click', cerrarModal);
            
            // Event listeners para el modal de nuevo usuario
            document.getElementById('nuevo-usuario-btn').addEventListener('click', abrirNuevoUsuarioModal);
            document.getElementById('close-nuevo-modal').addEventListener('click', cerrarNuevoUsuarioModal);
            document.getElementById('cancelar-nuevo').addEventListener('click', cerrarNuevoUsuarioModal);
            document.getElementById('nuevo-usuario-form').addEventListener('submit', crearUsuario);
            
            // Event listeners para el modal de editar usuario
            document.getElementById('close-editar-modal').addEventListener('click', cerrarEditarUsuarioModal);
            document.getElementById('cancelar-editar').addEventListener('click', cerrarEditarUsuarioModal);
            document.getElementById('editar-usuario-form').addEventListener('submit', actualizarUsuario);
            

        });

        async function cargarUsuarios() {
            try {
                const response = await fetch('/admin/api/usuarios');
                const usuarios = await response.json();
                
                // Almacenar todos los usuarios
                todosLosUsuarios = usuarios;
                usuariosFiltrados = [...usuarios];
                
                mostrarUsuarios(usuariosFiltrados);
                actualizarContador(usuariosFiltrados);
            } catch (error) {
                console.error('Error cargando usuarios:', error);
            }
        }

        function actualizarContador(usuarios) {
            const totalElement = document.getElementById('total-users');
            if (totalElement) {
                totalElement.textContent = usuarios.length;
            }
        }

        function mostrarUsuarios(usuarios) {
            const tbody = document.getElementById('usuarios-table');
            tbody.innerHTML = '';

            usuarios.forEach(usuario => {
                const row = document.createElement('tr');
                row.className = 'hover:bg-gray-50';
                
                const estadoClass = usuario.activo ? 'bg-emerald-100 text-emerald-800' : 'bg-red-100 text-red-800';
                const rolClass = usuario.rol === 'administrador' ? 'bg-violet-100 text-violet-800' : 'bg-indigo-100 text-indigo-800';
                
                // Generar color basado en el nombre para consistencia
                const colors = [
                    '#4f46e5', // indigo
                    '#059669', // emerald
                    '#d97706', // amber
                    '#7c3aed', // violet
                    '#0891b2', // cyan
                    '#e11d48', // rose
                    '#65a30d', // lime
                    '#ea580c'  // orange
                ];
                const colorIndex = usuario.nombre.charCodeAt(0) % colors.length;
                const avatarColor = colors[colorIndex];
                const initial = usuario.nombre.charAt(0).toUpperCase();
                
                row.innerHTML = `
                    <td class="px-6 py-4 whitespace-nowrap">
                        <div class="flex items-center">
                            <div class="w-12 h-12 rounded-full flex items-center justify-center shadow-lg" style="background-color: ${avatarColor}">
                                <span class="text-white text-lg font-bold">${initial}</span>
                            </div>
                            <div class="ml-4">
                                <div class="text-sm font-semibold text-slate-900">${usuario.nombre} ${usuario.apellido}</div>
                                <div class="text-xs text-slate-500">ID: ${usuario._id.slice(-6)}</div>
                            </div>
                        </div>
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap">
                        <div class="text-sm text-slate-900">${usuario.email}</div>
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap">
                        <div class="text-sm text-slate-900">${usuario.cedula || 'No asignada'}</div>
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap">
                        <span class="px-3 py-1 inline-flex items-center text-xs leading-5 font-semibold rounded-full ${rolClass}">
                            <i class="fas fa-${usuario.rol === 'administrador' ? 'user-shield' : 'user-graduate'} mr-1.5"></i>
                            ${usuario.rol}
                        </span>
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap">
                        <span class="px-3 py-1 inline-flex items-center text-xs leading-5 font-semibold rounded-full ${estadoClass}">
                            <i class="fas fa-${usuario.activo ? 'check-circle' : 'times-circle'} mr-1.5"></i>
                            ${usuario.activo ? 'Activo' : 'Inactivo'}
                        </span>
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap">
                        <div class="text-sm text-slate-900">${new Date(usuario.ultimoAcceso).toLocaleDateString()}</div>
                        <div class="text-xs text-slate-500">${new Date(usuario.ultimoAcceso).toLocaleTimeString()}</div>
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
                        <div class="flex items-center gap-2">
                            <button class="btn-ver-detalles p-2 text-indigo-600 hover:text-indigo-700 hover:bg-indigo-50 rounded-lg transition-colors" data-usuario-id="${usuario._id}">
                                <i class="fas fa-eye"></i>
                            </button>
                            <button class="btn-editar-usuario p-2 text-amber-600 hover:text-amber-700 hover:bg-amber-50 rounded-lg transition-colors" data-usuario-id="${usuario._id}">
                                <i class="fas fa-edit"></i>
                            </button>
                            <button class="btn-eliminar-usuario p-2 text-red-600 hover:text-red-700 hover:bg-red-50 rounded-lg transition-colors" data-usuario-id="${usuario._id}">
                                <i class="fas fa-trash"></i>
                            </button>
                        </div>
                    </td>
                `;
                
                tbody.appendChild(row);
                
                // Agregar event listeners a los botones de esta fila
                const verBtn = row.querySelector('.btn-ver-detalles');
                const editarBtn = row.querySelector('.btn-editar-usuario');
                const eliminarBtn = row.querySelector('.btn-eliminar-usuario');
                
                verBtn.addEventListener('click', () => {
                    const usuarioId = verBtn.getAttribute('data-usuario-id');
                    verDetalles(usuarioId);
                });
                
                editarBtn.addEventListener('click', () => {
                    const usuarioId = editarBtn.getAttribute('data-usuario-id');
                    editarUsuario(usuarioId);
                });
                
                eliminarBtn.addEventListener('click', () => {
                    const usuarioId = eliminarBtn.getAttribute('data-usuario-id');
                    eliminarUsuario(usuarioId);
                });
            });
        }

        function filtrarUsuarios() {
            const searchTerm = document.getElementById('search-input').value.toLowerCase().trim();
            const rolFilter = document.getElementById('rol-filter').value;
            const estadoFilter = document.getElementById('estado-filter').value;
            
            // Filtrar usuarios
            usuariosFiltrados = todosLosUsuarios.filter(usuario => {
                // Filtro de búsqueda (nombre, apellido, email, cédula)
                const matchesSearch = !searchTerm || 
                    usuario.nombre.toLowerCase().includes(searchTerm) ||
                    usuario.apellido.toLowerCase().includes(searchTerm) ||
                    usuario.email.toLowerCase().includes(searchTerm) ||
                    (usuario.cedula && usuario.cedula.includes(searchTerm));
                
                // Filtro de rol
                const matchesRol = !rolFilter || usuario.rol === rolFilter;
                
                // Filtro de estado
                const matchesEstado = !estadoFilter || 
                    (estadoFilter === 'activo' && usuario.activo) ||
                    (estadoFilter === 'inactivo' && !usuario.activo);
                
                return matchesSearch && matchesRol && matchesEstado;
            });
            
            // Mostrar usuarios filtrados
            mostrarUsuarios(usuariosFiltrados);
            actualizarContador(usuariosFiltrados);
            
            // Mostrar mensaje si no hay resultados
            mostrarMensajeFiltros();
            
            // Actualizar indicador de filtros activos
            actualizarIndicadorFiltros();
        }

        function limpiarFiltros() {
            // Limpiar campos de filtro
            document.getElementById('search-input').value = '';
            document.getElementById('rol-filter').value = '';
            document.getElementById('estado-filter').value = '';
            
            // Restaurar todos los usuarios
            usuariosFiltrados = [...todosLosUsuarios];
            
            // Mostrar todos los usuarios
            mostrarUsuarios(usuariosFiltrados);
            actualizarContador(usuariosFiltrados);
            
            // Ocultar mensaje de filtros
            ocultarMensajeFiltros();
            
            // Actualizar indicador de filtros
            actualizarIndicadorFiltros();
        }

        function mostrarMensajeFiltros() {
            const tbody = document.getElementById('usuarios-table');
            
            if (usuariosFiltrados.length === 0) {
                // Mostrar mensaje de no resultados
                tbody.innerHTML = `
                    <tr>
                        <td colspan="7" class="px-6 py-12 text-center">
                            <div class="flex flex-col items-center justify-center">
                                <div class="w-16 h-16 bg-gray-100 rounded-full flex items-center justify-center mb-4">
                                    <i class="fas fa-search text-gray-400 text-2xl"></i>
                                </div>
                                <h3 class="text-lg font-medium text-gray-900 mb-2">No se encontraron usuarios</h3>
                                <p class="text-gray-500 mb-4">No hay usuarios que coincidan con los filtros aplicados</p>
                                <button onclick="limpiarFiltros()" class="btn-secondary">
                                    <i class="fas fa-times mr-2"></i>
                                    Limpiar Filtros
                                </button>
                            </div>
                        </td>
                    </tr>
                `;
            }
        }

        function ocultarMensajeFiltros() {
            // Esta función se puede usar para ocultar mensajes específicos si es necesario
            // Por ahora, la función mostrarUsuarios() maneja la visualización
        }

        function actualizarIndicadorFiltros() {
            const searchTerm = document.getElementById('search-input').value.trim();
            const rolFilter = document.getElementById('rol-filter').value;
            const estadoFilter = document.getElementById('estado-filter').value;
            
            let filtrosActivos = 0;
            if (searchTerm) filtrosActivos++;
            if (rolFilter) filtrosActivos++;
            if (estadoFilter) filtrosActivos++;
            
            // Actualizar el contador de usuarios para mostrar filtros activos
            const totalElement = document.getElementById('total-users');
            if (totalElement) {
                if (filtrosActivos > 0) {
                    totalElement.innerHTML = `
                        <span class="text-indigo-600">${usuariosFiltrados.length}</span>
                        <span class="text-gray-400">/ ${todosLosUsuarios.length}</span>
                        <span class="text-xs text-amber-600 ml-2">
                            <i class="fas fa-filter mr-1"></i>
                            ${filtrosActivos} filtro${filtrosActivos > 1 ? 's' : ''} activo${filtrosActivos > 1 ? 's' : ''}
                        </span>
                    `;
                } else {
                    totalElement.textContent = usuariosFiltrados.length;
                }
            }
        }

        async function verDetalles(usuarioId) {
            try {
                const response = await fetch(`/admin/api/usuarios/${usuarioId}`);
                const usuario = await response.json();
                
                const detailsDiv = document.getElementById('user-details');
                const estadoClass = usuario.activo ? 'bg-emerald-100 text-emerald-800' : 'bg-red-100 text-red-800';
                const rolClass = usuario.rol === 'administrador' ? 'bg-violet-100 text-violet-800' : 'bg-indigo-100 text-indigo-800';
                
                // Generar el mismo color para el avatar en el modal
                const colors = [
                    '#4f46e5', // indigo
                    '#059669', // emerald
                    '#d97706', // amber
                    '#7c3aed', // violet
                    '#0891b2', // cyan
                    '#e11d48', // rose
                    '#65a30d', // lime
                    '#ea580c'  // orange
                ];
                const colorIndex = usuario.nombre.charCodeAt(0) % colors.length;
                const avatarColor = colors[colorIndex];
                const initial = usuario.nombre.charAt(0).toUpperCase();
                
                detailsDiv.innerHTML = `
                    <style>
                        .user-detail-card {
                            background: #f8fafc;
                            border: 1px solid #e2e8f0;
                            border-radius: 8px;
                            padding: 16px;
                            margin-bottom: 16px;
                        }
                        .user-detail-header {
                            background: #4f46e5;
                            color: white;
                            border-radius: 8px;
                            padding: 20px;
                            margin-bottom: 16px;
                            text-align: center;
                        }
                        .user-avatar {
                            width: 64px;
                            height: 64px;
                            border-radius: 50%;
                            display: flex;
                            align-items: center;
                            justify-content: center;
                            margin: 0 auto 12px;
                            border: 2px solid white;
                            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
                        }
                        .user-badge {
                            display: inline-flex;
                            align-items: center;
                            padding: 4px 8px;
                            border-radius: 20px;
                            font-size: 12px;
                            font-weight: 600;
                            margin: 0 4px;
                            background: rgba(255, 255, 255, 0.2);
                        }
                        .detail-section {
                            margin-bottom: 16px;
                        }
                        .detail-section h3 {
                            font-size: 16px;
                            font-weight: 600;
                            margin-bottom: 12px;
                            display: flex;
                            align-items: center;
                        }
                        .detail-item {
                            background: white;
                            border: 1px solid #e2e8f0;
                            border-radius: 8px;
                            padding: 12px;
                            margin-bottom: 8px;
                            display: flex;
                            align-items: center;
                        }
                        .detail-icon {
                            width: 40px;
                            height: 40px;
                            border-radius: 8px;
                            display: flex;
                            align-items: center;
                            justify-content: center;
                            margin-right: 12px;
                            color: white;
                        }
                        .detail-content {
                            flex: 1;
                        }
                        .detail-label {
                            font-size: 10px;
                            font-weight: 500;
                            text-transform: uppercase;
                            color: #64748b;
                            margin-bottom: 4px;
                        }
                        .detail-value {
                            font-size: 14px;
                            font-weight: 600;
                            color: #1e293b;
                        }
                        .detail-subvalue {
                            font-size: 12px;
                            color: #64748b;
                            margin-top: 2px;
                        }
                    </style>
                    
                    <!-- Header con avatar y nombre -->
                    <div class="user-detail-header">
                        <div class="user-avatar" style="background-color: ${avatarColor}">
                            <span style="color: white; font-size: 24px; font-weight: bold;">${initial}</span>
                        </div>
                        <h2 style="font-size: 20px; font-weight: bold; margin-bottom: 8px;">${usuario.nombre} ${usuario.apellido}</h2>
                        <div>
                            <span class="user-badge">
                                <i class="fas fa-${usuario.rol === 'administrador' ? 'user-shield' : 'user-graduate'}" style="margin-right: 4px;"></i>
                                ${usuario.rol}
                            </span>
                            <span class="user-badge" style="background: ${usuario.activo ? 'rgba(34, 197, 94, 0.2)' : 'rgba(239, 68, 68, 0.2)'}; color: ${usuario.activo ? '#dcfce7' : '#fecaca'};">
                                <i class="fas fa-${usuario.activo ? 'check-circle' : 'times-circle'}" style="margin-right: 4px;"></i>
                                ${usuario.activo ? 'Activo' : 'Inactivo'}
                            </span>
                        </div>
                    </div>
                    
                    <!-- Información personal -->
                    <div class="user-detail-card">
                        <h3 style="color: #1e40af;">
                            <i class="fas fa-user-circle" style="margin-right: 8px; color: #2563eb;"></i>
                            Información Personal
                        </h3>
                        
                        <div class="detail-item">
                            <div class="detail-icon" style="background: #3b82f6;">
                                <i class="fas fa-envelope"></i>
                            </div>
                            <div class="detail-content">
                                <div class="detail-label" style="color: #2563eb;">Email</div>
                                <div class="detail-value" style="color: #1e40af;">${usuario.email}</div>
                            </div>
                        </div>
                        
                        <div class="detail-item">
                            <div class="detail-icon" style="background: #10b981;">
                                <i class="fas fa-id-card"></i>
                            </div>
                            <div class="detail-content">
                                <div class="detail-label" style="color: #059669;">Cédula</div>
                                <div class="detail-value" style="color: #047857;">${usuario.cedula || 'No asignada'}</div>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Información del sistema -->
                    <div class="user-detail-card">
                        <h3 style="color: #7c3aed;">
                            <i class="fas fa-cogs" style="margin-right: 8px; color: #8b5cf6;"></i>
                            Información del Sistema
                        </h3>
                        
                        <div class="detail-item">
                            <div class="detail-icon" style="background: #f59e0b;">
                                <i class="fas fa-calendar-plus"></i>
                            </div>
                            <div class="detail-content">
                                <div class="detail-label" style="color: #d97706;">Fecha de Registro</div>
                                <div class="detail-value" style="color: #92400e;">${new Date(usuario.createdAt).toLocaleDateString()}</div>
                                <div class="detail-subvalue">${new Date(usuario.createdAt).toLocaleTimeString()}</div>
                            </div>
                        </div>
                        
                        <div class="detail-item">
                            <div class="detail-icon" style="background: #06b6d4;">
                                <i class="fas fa-clock"></i>
                            </div>
                            <div class="detail-content">
                                <div class="detail-label" style="color: #0891b2;">Último Acceso</div>
                                <div class="detail-value" style="color: #0e7490;">${new Date(usuario.ultimoAcceso).toLocaleDateString()}</div>
                                <div class="detail-subvalue">${new Date(usuario.ultimoAcceso).toLocaleTimeString()}</div>
                            </div>
                        </div>
                    </div>
                    
                    <!-- ID del usuario -->
                    <div class="user-detail-card">
                        <h3 style="color: #374151;">
                            <i class="fas fa-fingerprint" style="margin-right: 8px; color: #6b7280;"></i>
                            Identificador Único
                        </h3>
                        
                        <div class="detail-item">
                            <div class="detail-icon" style="background: #6b7280;">
                                <i class="fas fa-hashtag"></i>
                            </div>
                            <div class="detail-content">
                                <div class="detail-label" style="color: #6b7280;">ID de Usuario</div>
                                <div class="detail-value" style="color: #374151; font-family: monospace; font-size: 12px; word-break: break-all;">${usuario._id}</div>
                            </div>
                        </div>
                    </div>
                `;
                
                document.getElementById('user-modal').classList.remove('hidden');
            } catch (error) {
                console.error('Error cargando detalles del usuario:', error);
            }
        }

        function cerrarModal() {
            document.getElementById('user-modal').classList.add('hidden');
        }

        async function editarUsuario(usuarioId) {
            console.log('🔧 Función editarUsuario llamada con ID:', usuarioId);
            try {
                console.log('📡 Haciendo fetch a:', `/admin/api/usuarios/${usuarioId}`);
                const response = await fetch(`/admin/api/usuarios/${usuarioId}`);
                console.log('📡 Respuesta recibida:', response.status, response.ok);
                
                const usuario = await response.json();
                console.log('👤 Datos del usuario:', usuario);
                
                if (response.ok) {
                    console.log('✅ Abriendo modal de edición...');
                    abrirEditarUsuarioModal(usuario);
                } else {
                    console.error('❌ Error en la respuesta:', usuario);
                    alert('Error al cargar los datos del usuario');
                }
            } catch (error) {
                console.error('❌ Error cargando usuario:', error);
                alert('Error al cargar los datos del usuario');
            }
        }



        async function eliminarUsuario(usuarioId) {
            try {
                // Obtener datos del usuario para mostrar en la confirmación
                const response = await fetch(`/admin/api/usuarios/${usuarioId}`);
                const usuario = await response.json();
                
                if (response.ok) {
                    const nombreCompleto = `${usuario.nombre} ${usuario.apellido}`;
                    
                    // Mostrar alerta de confirmación con SweetAlert2
                    const result = await Swal.fire({
                        title: '¿Eliminar Usuario?',
                        html: `
                            <div style="text-align: center; padding: 20px;">
                                <div style="width: 80px; height: 80px; background: linear-gradient(135deg, #ff6b6b, #ee5a52); border-radius: 50%; display: flex; align-items: center; justify-content: center; margin: 0 auto 20px; box-shadow: 0 8px 25px rgba(255, 107, 107, 0.3);">
                                    <i class="fas fa-trash" style="color: white; font-size: 32px;"></i>
                                </div>
                                <h3 style="color: #2d3748; font-size: 24px; font-weight: 600; margin: 0 0 15px 0; font-family: 'Inter', sans-serif;">
                                    ¿Eliminar Usuario?
                                </h3>
                                <p style="color: #4a5568; font-size: 16px; margin: 0 0 20px 0; line-height: 1.5;">
                                    Estás a punto de eliminar permanentemente a<br>
                                    <strong style="color: #2d3748; font-size: 18px;">${nombreCompleto}</strong>
                                </p>
                                <div style="background: linear-gradient(135deg, #fed7d7, #feb2b2); border: 1px solid #fc8181; border-radius: 12px; padding: 15px; margin: 20px 0; text-align: left;">
                                    <div style="display: flex; align-items: center; color: #c53030;">
                                        <i class="fas fa-exclamation-triangle" style="margin-right: 8px; font-size: 16px;"></i>
                                        <span style="font-weight: 600; font-size: 14px;">Esta acción no se puede deshacer</span>
                                    </div>
                                    <p style="color: #742a2a; font-size: 13px; margin: 8px 0 0 0; line-height: 1.4;">
                                        Todos los datos del usuario serán eliminados permanentemente del sistema.
                                    </p>
                                </div>
                            </div>
                        `,
                        showCancelButton: true,
                        confirmButtonColor: '#e53e3e',
                        cancelButtonColor: '#718096',
                        confirmButtonText: `
                            <div style="display: flex; align-items: center; justify-content: center; gap: 8px;">
                                <i class="fas fa-trash"></i>
                                <span>Eliminar Usuario</span>
                            </div>
                        `,
                        cancelButtonText: `
                            <div style="display: flex; align-items: center; justify-content: center; gap: 8px;">
                                <i class="fas fa-times"></i>
                                <span>Cancelar</span>
                            </div>
                        `,
                        reverseButtons: true,
                        focusCancel: true,
                        allowOutsideClick: false,
                        allowEscapeKey: true,
                        showCloseButton: false,
                        customClass: {
                            popup: 'swal2-popup-modern',
                            title: 'swal2-title-modern',
                            htmlContainer: 'swal2-html-container-modern',
                            confirmButton: 'swal2-confirm-modern',
                            cancelButton: 'swal2-cancel-modern'
                        },
                        buttonsStyling: true,
                        backdrop: 'rgba(0, 0, 0, 0.6)'
                    });
                    
                    if (result.isConfirmed) {
                        await confirmarEliminarUsuario(usuarioId);
                    }
                } else {
                    Swal.fire({
                        title: 'Error',
                        text: 'Error al cargar los datos del usuario',
                        icon: 'error',
                        confirmButtonText: 'OK'
                    });
                }
            } catch (error) {
                console.error('Error cargando usuario:', error);
                Swal.fire({
                    title: 'Error',
                    text: 'Error al cargar los datos del usuario',
                    icon: 'error',
                    confirmButtonText: 'OK'
                });
            }
        }

        // Funciones para el modal de nuevo usuario
        function abrirNuevoUsuarioModal() {
            document.getElementById('nuevo-usuario-modal').classList.remove('hidden');
            limpiarFormulario();
            ocultarMensajes();
        }

        function cerrarNuevoUsuarioModal() {
            document.getElementById('nuevo-usuario-modal').classList.add('hidden');
            limpiarFormulario();
            ocultarMensajes();
        }

        function limpiarFormulario() {
            document.getElementById('nuevo-usuario-form').reset();
        }

        function ocultarMensajes() {
            document.getElementById('error-message').classList.add('hidden');
            document.getElementById('success-message').classList.add('hidden');
        }

        function mostrarError(mensaje) {
            const errorDiv = document.getElementById('error-message');
            const errorText = document.getElementById('error-text');
            errorText.textContent = mensaje;
            errorDiv.classList.remove('hidden');
            document.getElementById('success-message').classList.add('hidden');
        }

        function mostrarExito(mensaje) {
            const successDiv = document.getElementById('success-message');
            const successText = document.getElementById('success-text');
            successText.textContent = mensaje;
            successDiv.classList.remove('hidden');
            document.getElementById('error-message').classList.add('hidden');
        }

        function validarFormulario(formData) {
            const errores = [];

            // Validar contraseñas
            if (formData.password !== formData.confirmPassword) {
                errores.push('Las contraseñas no coinciden');
            }

            if (formData.password.length < 6) {
                errores.push('La contraseña debe tener al menos 6 caracteres');
            }

            // Validar email
            const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
            if (!emailRegex.test(formData.email)) {
                errores.push('El email no tiene un formato válido');
            }

            // Validar cédula si se proporciona
            if (formData.cedula && !/^\d{7,8}$/.test(formData.cedula)) {
                errores.push('La cédula debe tener entre 7 y 8 dígitos');
            }

            return errores;
        }

        async function crearUsuario(event) {
            event.preventDefault();
            
            const formData = new FormData(event.target);
            const usuarioData = {
                nombre: formData.get('nombre').trim(),
                apellido: formData.get('apellido').trim(),
                email: formData.get('email').trim(),
                cedula: formData.get('cedula').trim(),
                password: formData.get('password'),
                confirmPassword: formData.get('confirmPassword'),
                rol: formData.get('rol'),
                activo: formData.get('activo') === 'true'
            };

            // Validar formulario
            const errores = validarFormulario(usuarioData);
            if (errores.length > 0) {
                mostrarError(errores.join(', '));
                return;
            }

            // Preparar datos para envío (remover confirmPassword)
            const { confirmPassword, ...datosEnvio } = usuarioData;

            try {
                const crearBtn = document.getElementById('crear-usuario-btn');
                const textoOriginal = crearBtn.innerHTML;
                crearBtn.innerHTML = '<i class="fas fa-spinner fa-spin mr-2"></i>Creando...';
                crearBtn.disabled = true;

                const response = await fetch('/admin/api/usuarios', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(datosEnvio)
                });

                const result = await response.json();

                if (response.ok) {
                    mostrarExito('Usuario creado exitosamente');
                    await cargarUsuarios(); // Recargar la lista de usuarios
                    filtrarUsuarios(); // Aplicar filtros actuales
                    
                    // Cerrar modal después de 2 segundos
                    setTimeout(() => {
                        cerrarNuevoUsuarioModal();
                    }, 2000);
                } else {
                    mostrarError(result.message || 'Error al crear el usuario');
                }
            } catch (error) {
                console.error('Error creando usuario:', error);
                mostrarError('Error de conexión. Intenta nuevamente.');
            } finally {
                const crearBtn = document.getElementById('crear-usuario-btn');
                crearBtn.innerHTML = '<i class="fas fa-user-plus mr-2"></i>Crear Usuario';
                crearBtn.disabled = false;
            }
        }

        // Funciones para el modal de editar usuario
        function abrirEditarUsuarioModal(usuario) {
            console.log('🎯 Función abrirEditarUsuarioModal llamada con usuario:', usuario);
            
            try {
                // Llenar el formulario con los datos del usuario
                document.getElementById('editar-usuario-id').value = usuario._id;
                document.getElementById('editar-nombre').value = usuario.nombre;
                document.getElementById('editar-apellido').value = usuario.apellido;
                document.getElementById('editar-email').value = usuario.email;
                document.getElementById('editar-cedula').value = usuario.cedula || '';
                document.getElementById('editar-rol').value = usuario.rol;
                document.getElementById('editar-activo').value = usuario.activo.toString();
                
                // Limpiar campos de contraseña
                document.getElementById('editar-password').value = '';
                document.getElementById('editar-confirmPassword').value = '';
                
                console.log('📝 Formulario llenado correctamente');
                
                // Ocultar mensajes
                ocultarMensajesEditar();
                
                // Mostrar modal
                const modal = document.getElementById('editar-usuario-modal');
                console.log('🔍 Modal encontrado:', modal);
                modal.classList.remove('hidden');
                console.log('✅ Modal mostrado');
            } catch (error) {
                console.error('❌ Error en abrirEditarUsuarioModal:', error);
            }
        }

        function cerrarEditarUsuarioModal() {
            document.getElementById('editar-usuario-modal').classList.add('hidden');
            limpiarFormularioEditar();
            ocultarMensajesEditar();
        }

        function limpiarFormularioEditar() {
            document.getElementById('editar-usuario-form').reset();
        }

        function ocultarMensajesEditar() {
            document.getElementById('editar-error-message').classList.add('hidden');
            document.getElementById('editar-success-message').classList.add('hidden');
        }

        function mostrarErrorEditar(mensaje) {
            const errorDiv = document.getElementById('editar-error-message');
            const errorText = document.getElementById('editar-error-text');
            errorText.textContent = mensaje;
            errorDiv.classList.remove('hidden');
            document.getElementById('editar-success-message').classList.add('hidden');
        }

        function mostrarExitoEditar(mensaje) {
            const successDiv = document.getElementById('editar-success-message');
            const successText = document.getElementById('editar-success-text');
            successText.textContent = mensaje;
            successDiv.classList.remove('hidden');
            document.getElementById('editar-error-message').classList.add('hidden');
        }

        function validarFormularioEditar(formData) {
            const errores = [];

            // Validar contraseñas solo si se proporcionan
            if (formData.password || formData.confirmPassword) {
                if (formData.password !== formData.confirmPassword) {
                    errores.push('Las contraseñas no coinciden');
                }

                if (formData.password.length < 6) {
                    errores.push('La contraseña debe tener al menos 6 caracteres');
                }
            }

            // Validar email
            const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
            if (!emailRegex.test(formData.email)) {
                errores.push('El email no tiene un formato válido');
            }

            // Validar cédula si se proporciona
            if (formData.cedula && !/^\d{7,8}$/.test(formData.cedula)) {
                errores.push('La cédula debe tener entre 7 y 8 dígitos');
            }

            return errores;
        }

        async function actualizarUsuario(event) {
            event.preventDefault();
            
            const formData = new FormData(event.target);
            const usuarioId = formData.get('usuarioId');
            const usuarioData = {
                nombre: formData.get('nombre').trim(),
                apellido: formData.get('apellido').trim(),
                email: formData.get('email').trim(),
                cedula: formData.get('cedula').trim(),
                password: formData.get('password'),
                confirmPassword: formData.get('confirmPassword'),
                rol: formData.get('rol'),
                activo: formData.get('activo') === 'true'
            };

            // Validar formulario
            const errores = validarFormularioEditar(usuarioData);
            if (errores.length > 0) {
                mostrarErrorEditar(errores.join(', '));
                return;
            }

            // Preparar datos para envío
            const { confirmPassword, ...datosEnvio } = usuarioData;
            
            // Si no se proporciona contraseña, no incluirla en el envío
            if (!datosEnvio.password) {
                delete datosEnvio.password;
            }

            try {
                const actualizarBtn = document.getElementById('actualizar-usuario-btn');
                const textoOriginal = actualizarBtn.innerHTML;
                actualizarBtn.innerHTML = '<i class="fas fa-spinner fa-spin mr-2"></i>Actualizando...';
                actualizarBtn.disabled = true;

                const response = await fetch(`/admin/api/usuarios/${usuarioId}`, {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(datosEnvio)
                });

                const result = await response.json();

                if (response.ok) {
                    mostrarExitoEditar('Usuario actualizado exitosamente');
                    await cargarUsuarios(); // Recargar la lista de usuarios
                    filtrarUsuarios(); // Aplicar filtros actuales
                    
                    // Cerrar modal después de 2 segundos
                    setTimeout(() => {
                        cerrarEditarUsuarioModal();
                    }, 2000);
                } else {
                    mostrarErrorEditar(result.message || 'Error al actualizar el usuario');
                }
            } catch (error) {
                console.error('Error actualizando usuario:', error);
                mostrarErrorEditar('Error de conexión. Intenta nuevamente.');
            } finally {
                const actualizarBtn = document.getElementById('actualizar-usuario-btn');
                actualizarBtn.innerHTML = '<i class="fas fa-save mr-2"></i>Actualizar Usuario';
                actualizarBtn.disabled = false;
            }
        }



        async function confirmarEliminarUsuario(usuarioId) {
            try {
                // Mostrar loading
                Swal.fire({
                    title: 'Eliminando...',
                    text: 'Por favor espera mientras eliminamos el usuario',
                    icon: 'info',
                    allowOutsideClick: false,
                    showConfirmButton: false,
                    didOpen: () => {
                        Swal.showLoading();
                    }
                });

                const response = await fetch(`/admin/api/usuarios/${usuarioId}`, {
                    method: 'DELETE'
                });

                if (response.ok) {
                    // Mostrar mensaje de éxito
                    await Swal.fire({
                        title: '¡Eliminado!',
                        text: 'El usuario ha sido eliminado correctamente',
                        icon: 'success',
                        confirmButtonText: 'OK',
                        timer: 2000,
                        timerProgressBar: true
                    });
                    
                    // Recargar lista de usuarios
                    await cargarUsuarios();
                    filtrarUsuarios(); // Aplicar filtros actuales
                } else {
                    const result = await response.json();
                    await Swal.fire({
                        title: 'Error',
                        text: result.message || 'Error al eliminar el usuario',
                        icon: 'error',
                        confirmButtonText: 'OK'
                    });
                }
            } catch (error) {
                console.error('Error eliminando usuario:', error);
                await Swal.fire({
                    title: 'Error',
                    text: 'Error de conexión. Intenta nuevamente.',
                    icon: 'error',
                    confirmButtonText: 'OK'
                });
            }
        }
    </script>
</body>
</html>
