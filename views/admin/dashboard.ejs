<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Panel de Administrador - MATRICULATEC</title>
    
    <!-- Tailwind CSS Local -->
    <link rel="stylesheet" href="/css/tailwind.css">
    <!-- Admin CSS Personalizado -->
    <link rel="stylesheet" href="/css/admin.css">
    <!-- FontAwesome -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <!-- Google Fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800&display=swap" rel="stylesheet">
    <!-- Chart.js -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <!-- Socket.IO -->
    <script src="/socket.io/socket.io.js"></script>
</head>
<body class="bg-utec-light font-inter">
    <!-- Navigation -->
    <nav class="admin-nav">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <div class="flex justify-between items-center h-20">
                <div class="nav-brand">
                    <div class="brand-icon">
                        <i class="fas fa-shield-alt text-white text-2xl"></i>
                    </div>
                    <div class="brand-text">
                        <h1>Panel Admin</h1>
                        <p>MATRICULATEC</p>
                    </div>
                </div>
                <div class="nav-user">
                    <div class="user-info">
                        <p class="user-name"><%= usuario.nombre %> <%= usuario.apellido %></p>
                        <p class="user-role">Administrador</p>
                    </div>
                                    <div class="nav-actions">
                    <div class="connection-status" id="connection-status">
                        <div class="status-indicator" id="status-indicator"></div>
                        <span id="status-text">Conectando...</span>
                    </div>
                    <a href="/dashboard">
                        <i class="fas fa-tachometer-alt"></i>
                        <span>Dashboard</span>
                    </a>
                    <a href="/auth/logout">
                        <i class="fas fa-sign-out-alt"></i>
                        <span>Salir</span>
                    </a>
                </div>
                </div>
            </div>
        </div>
    </nav>

    <!-- Main Content -->
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        <!-- Welcome Section -->
        <div class="mb-8">
            <div class="welcome-section">
                <div class="welcome-content">
                    <h1 class="welcome-title">
                        ¬°Bienvenido, <%= usuario.nombre %>! üëã
                    </h1>
                    <p class="welcome-subtitle">
                        Gestiona el sistema acad√©mico con herramientas profesionales
                    </p>
                    <div class="welcome-info">
                        <div class="welcome-info-item">
                            <i class="fas fa-calendar-alt"></i>
                            <span id="current-date"></span>
                        </div>
                        <div class="welcome-info-item">
                            <i class="fas fa-clock"></i>
                            <span id="current-time"></span>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Stats Cards -->
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
            <!-- Total Usuarios -->
            <div class="stat-card indigo">
                <div class="flex items-center justify-between mb-4">
                    <div class="stat-icon indigo">
                        <i class="fas fa-users text-white text-xl"></i>
                    </div>
                    <div class="text-right">
                        <p class="stat-number" id="total-usuarios">
                            <span class="animate-pulse">-</span>
                        </p>
                        <p class="stat-label">usuarios</p>
                    </div>
                </div>
                <h3 class="stat-title">Total Usuarios</h3>
                <p class="stat-description">Estudiantes y administradores</p>
                <div class="stat-trend positive">
                    <i class="fas fa-arrow-up"></i>
                    <span>+12% este mes</span>
                </div>
            </div>

            <!-- Total Materias -->
            <div class="stat-card emerald">
                <div class="flex items-center justify-between mb-4">
                    <div class="stat-icon emerald">
                        <i class="fas fa-book text-white text-xl"></i>
                    </div>
                    <div class="text-right">
                        <p class="stat-number" id="total-materias">
                            <span class="animate-pulse">-</span>
                        </p>
                        <p class="stat-label">materias</p>
                    </div>
                </div>
                <h3 class="stat-title">Total Materias</h3>
                <p class="stat-description">Cat√°logo acad√©mico</p>
                <div class="stat-trend positive">
                    <i class="fas fa-arrow-up"></i>
                    <span>+5 nuevas</span>
                </div>
            </div>

            <!-- Total Previas -->
            <div class="stat-card amber">
                <div class="flex items-center justify-between mb-4">
                    <div class="stat-icon amber">
                        <i class="fas fa-link text-white text-xl"></i>
                    </div>
                    <div class="text-right">
                        <p class="stat-number" id="total-previas">
                            <span class="animate-pulse">-</span>
                        </p>
                        <p class="stat-label">previas</p>
                    </div>
                </div>
                <h3 class="stat-title">Total Previas</h3>
                <p class="stat-description">Requisitos acad√©micos</p>
                <div class="stat-trend positive">
                    <i class="fas fa-arrow-up"></i>
                    <span>+3 nuevas</span>
                </div>
            </div>

            <!-- Usuarios Activos -->
            <div class="stat-card violet">
                <div class="flex items-center justify-between mb-4">
                    <div class="stat-icon violet">
                        <i class="fas fa-user-check text-white text-xl"></i>
                    </div>
                    <div class="text-right">
                        <p class="stat-number" id="usuarios-activos">
                            <span class="animate-pulse">-</span>
                        </p>
                        <p class="stat-label">activos</p>
                    </div>
                </div>
                <h3 class="stat-title">Usuarios Activos</h3>
                <p class="stat-description">En l√≠nea ahora</p>
                <div class="stat-trend live">
                    <div class="w-2 h-2 bg-emerald-500 rounded-full animate-pulse"></div>
                    <span>En tiempo real</span>
                </div>
            </div>
        </div>

        <!-- Charts and Analytics -->
        <div class="grid grid-cols-1 lg:grid-cols-2 gap-8 mb-8">
            <!-- Chart 1: Usuarios por Rol -->
            <div class="card-utec">
                <div class="flex items-center justify-between mb-6">
                    <h3 class="text-2xl font-bold text-slate-800">Distribuci√≥n de Usuarios</h3>
                    <div class="flex items-center space-x-2">
                        <div class="w-3 h-3 bg-emerald-600 rounded-full"></div>
                        <span class="text-sm text-slate-600">Por rol</span>
                    </div>
                </div>
                <div class="h-64">
                    <canvas id="usersChart"></canvas>
                </div>
            </div>

            <!-- Chart 2: Actividad Mensual -->
            <div class="card-utec">
                <div class="flex items-center justify-between mb-6">
                    <h3 class="text-2xl font-bold text-slate-800">Actividad Mensual</h3>
                    <div class="flex items-center space-x-2">
                        <div class="w-3 h-3 bg-emerald-600 rounded-full"></div>
                        <span class="text-sm text-slate-600">√öltimos 6 meses</span>
                    </div>
                </div>
                <div class="h-64">
                    <canvas id="activityChart"></canvas>
                </div>
            </div>
        </div>

        <!-- Management Sections -->
        <div class="grid grid-cols-1 lg:grid-cols-3 gap-8 mb-8">
            <!-- Gesti√≥n de Usuarios -->
            <div class="management-section indigo">
                <div class="management-header">
                    <div class="management-icon indigo">
                        <i class="fas fa-users text-white text-2xl"></i>
                    </div>
                    <div>
                        <h3 class="management-title">Usuarios</h3>
                        <p class="management-description">Gestiona usuarios</p>
                    </div>
                </div>
                <div class="management-actions">
                    <a href="/admin/usuarios" class="w-full btn-primary block text-center">
                        <i class="fas fa-list"></i>
                        Ver Todos los Usuarios
                    </a>
                    <a href="/admin/usuarios/nuevo" class="w-full btn-success block text-center">
                        <i class="fas fa-user-plus"></i>
                        Crear Usuario
                    </a>
                </div>
            </div>

            <!-- Gesti√≥n de Materias -->
            <div class="management-section emerald">
                <div class="management-header">
                    <div class="management-icon emerald">
                        <i class="fas fa-book text-white text-2xl"></i>
                    </div>
                    <div>
                        <h3 class="management-title">Materias</h3>
                        <p class="management-description">Administra el cat√°logo de materias</p>
                    </div>
                </div>
                <div class="management-actions">
                    <a href="/admin/materias" class="w-full btn-primary block text-center">
                        <i class="fas fa-list"></i>
                        Ver Todas las Materias
                    </a>
                    <a href="/admin/materias/nueva" class="w-full btn-success block text-center">
                        <i class="fas fa-plus"></i>
                        Crear Materia
                    </a>
                </div>
            </div>

            <!-- Gesti√≥n de Previas -->
            <div class="management-section amber">
                <div class="management-header">
                    <div class="management-icon amber">
                        <i class="fas fa-link text-white text-2xl"></i>
                    </div>
                    <div>
                        <h3 class="management-title">Previas</h3>
                        <p class="management-description">Configura requisitos de materias</p>
                    </div>
                </div>
                <div class="management-actions">
                    <a href="/admin/previas" class="w-full btn-primary block text-center">
                        <i class="fas fa-list"></i>
                        Ver Todas las Previas
                    </a>
                    <a href="/admin/previas/nueva" class="w-full btn-success block text-center">
                        <i class="fas fa-link"></i>
                        Crear Previa
                    </a>
                </div>
            </div>
        </div>

        <!-- Recent Activity -->
        <div class="card-utec">
            <div class="flex items-center justify-between mb-6">
                <h3 class="text-2xl font-bold text-slate-800">
                    <i class="fas fa-clock mr-3"></i>
                    Actividad Reciente
                </h3>
                <button class="btn-secondary" onclick="cargarActividadReciente()">
                    <i class="fas fa-sync-alt"></i>
                    Actualizar
                </button>
            </div>
            <div id="actividad-reciente">
                <div class="activity-item indigo">
                    <div class="activity-icon indigo">
                        <i class="fas fa-user-plus text-white"></i>
                    </div>
                    <div class="activity-content">
                        <p class="activity-title">Nuevo usuario registrado</p>
                        <p class="activity-description">Juan P√©rez se registr√≥ en el sistema</p>
                        <p class="activity-time">Hace 2 horas</p>
                    </div>
                    <span class="activity-badge indigo">Nuevo</span>
                </div>
                <div class="activity-item emerald">
                    <div class="activity-icon emerald">
                        <i class="fas fa-book text-white"></i>
                    </div>
                    <div class="activity-content">
                        <p class="activity-title">Nueva materia creada</p>
                        <p class="activity-description">Programaci√≥n Avanzada fue agregada</p>
                        <p class="activity-time">Hace 4 horas</p>
                    </div>
                    <span class="activity-badge emerald">Materia</span>
                </div>
                <div class="activity-item amber">
                    <div class="activity-icon amber">
                        <i class="fas fa-link text-white"></i>
                    </div>
                    <div class="activity-content">
                        <p class="activity-title">Nueva previa configurada</p>
                        <p class="activity-description">Base de Datos requiere Programaci√≥n I</p>
                        <p class="activity-time">Hace 6 horas</p>
                    </div>
                    <span class="activity-badge amber">Previa</span>
                </div>
            </div>
        </div>
    </div>

    <!-- JavaScript -->
    <script>
        // Inicializar Socket.IO
        const socket = io();
        
        document.addEventListener('DOMContentLoaded', function() {
            // Cargar estad√≠sticas
            cargarEstadisticas();
            
            // Cargar actividad reciente
            cargarActividadReciente();
            
            // Actualizar fecha y hora
            actualizarFechaHora();
            setInterval(actualizarFechaHora, 1000);
            
            // Inicializar gr√°ficos
            inicializarGraficos();
            
            // Configurar eventos de Socket.IO
            configurarSocketEvents();
        });
        
        function configurarSocketEvents() {
            // Escuchar nuevos usuarios (desde registro p√∫blico)
            socket.on('usuario_registrado', function(data) {
                console.log('Usuario registrado desde auth:', data);
                mostrarNotificacion('Nuevo usuario registrado', `${data.usuario.nombre} ${data.usuario.apellido} se registr√≥ como ${data.usuario.rol}`);
                cargarEstadisticas(); // Actualizar estad√≠sticas
                cargarActividadReciente(); // Actualizar actividad
            });
            
            // Escuchar nuevos usuarios (desde panel admin)
            socket.on('nuevo-usuario', function(usuario) {
                console.log('Nuevo usuario creado desde admin:', usuario);
                mostrarNotificacion('Nuevo usuario creado', `${usuario.nombre} ${usuario.apellido} fue creado como ${usuario.rol}`);
                cargarEstadisticas(); // Actualizar estad√≠sticas
                cargarActividadReciente(); // Actualizar actividad
            });
            
            // Escuchar nuevas materias
            socket.on('nueva-materia', function(materia) {
                console.log('Nueva materia creada:', materia);
                mostrarNotificacion('Nueva materia creada', `${materia.nombre} (${materia.codigo}) fue agregada`);
                cargarEstadisticas(); // Actualizar estad√≠sticas
                cargarActividadReciente(); // Actualizar actividad
            });
            
            // Escuchar nuevas previas
            socket.on('nueva-previa', function(previa) {
                console.log('Nueva previa configurada:', previa);
                mostrarNotificacion('Nueva previa configurada', `${previa.materia.nombre} requiere ${previa.previa.nombre}`);
                cargarEstadisticas(); // Actualizar estad√≠sticas
                cargarActividadReciente(); // Actualizar actividad
            });
            
            // Escuchar actualizaciones de actividad
            socket.on('actividad-actualizada', function() {
                console.log('Actividad actualizada');
                cargarActividadReciente();
            });
            
            // Verificar conexi√≥n
            socket.on('connect', function() {
                console.log('Conectado a Socket.IO');
                actualizarEstadoConexion('connected', 'Conectado');
            });
            
            socket.on('disconnect', function() {
                console.log('Desconectado de Socket.IO');
                actualizarEstadoConexion('disconnected', 'Desconectado');
            });
            
            socket.on('connect_error', function() {
                console.log('Error de conexi√≥n Socket.IO');
                actualizarEstadoConexion('error', 'Error');
            });
        }
        
        function actualizarEstadoConexion(estado, texto) {
            const indicator = document.getElementById('status-indicator');
            const statusText = document.getElementById('status-text');
            
            if (indicator && statusText) {
                indicator.className = `status-indicator ${estado}`;
                statusText.textContent = texto;
            }
        }
        
        function mostrarNotificacion(titulo, mensaje) {
            console.log('Mostrando notificaci√≥n:', titulo, mensaje);
            
            // Crear notificaci√≥n toast
            const notificacion = document.createElement('div');
            notificacion.className = 'fixed top-4 right-4 bg-white border-l-4 border-emerald-500 shadow-lg rounded-lg p-4 z-50 max-w-sm transform transition-all duration-300 ease-in-out';
            notificacion.style.transform = 'translateX(100%)';
            notificacion.innerHTML = `
                <div class="flex items-center">
                    <div class="flex-shrink-0">
                        <i class="fas fa-bell text-emerald-500"></i>
                    </div>
                    <div class="ml-3">
                        <p class="text-sm font-medium text-slate-900">${titulo}</p>
                        <p class="text-sm text-slate-500">${mensaje}</p>
                    </div>
                    <div class="ml-auto pl-3">
                        <button onclick="this.parentElement.parentElement.parentElement.remove()" class="text-slate-400 hover:text-slate-600">
                            <i class="fas fa-times"></i>
                        </button>
                    </div>
                </div>
            `;
            
            document.body.appendChild(notificacion);
            
            // Animar entrada
            setTimeout(() => {
                notificacion.style.transform = 'translateX(0)';
            }, 100);
            
            // Auto-remover despu√©s de 5 segundos
            setTimeout(() => {
                if (notificacion.parentElement) {
                    notificacion.style.transform = 'translateX(100%)';
                    setTimeout(() => {
                        if (notificacion.parentElement) {
                            notificacion.remove();
                        }
                    }, 300);
                }
            }, 5000);
        }

        function actualizarFechaHora() {
            const now = new Date();
            const fecha = now.toLocaleDateString('es-ES', { 
                weekday: 'long', 
                year: 'numeric', 
                month: 'long', 
                day: 'numeric' 
            });
            const hora = now.toLocaleTimeString('es-ES', { 
                hour: '2-digit', 
                minute: '2-digit' 
            });
            
            document.getElementById('current-date').textContent = fecha;
            document.getElementById('current-time').textContent = hora;
        }

        async function cargarEstadisticas() {
            try {
                // Cargar usuarios directamente
                const usuariosResponse = await fetch('/admin/api/usuarios', {
                    credentials: 'same-origin'
                });
                
                if (!usuariosResponse.ok) {
                    if (usuariosResponse.status === 401) {
                        throw new Error('No est√°s autenticado. Por favor, inicia sesi√≥n nuevamente.');
                    } else if (usuariosResponse.status === 403) {
                        throw new Error('No tienes permisos de administrador.');
                    } else {
                        throw new Error(`Error del servidor: ${usuariosResponse.status}`);
                    }
                }
                
                const usuarios = await usuariosResponse.json();
                
                console.log('Usuarios cargados:', usuarios);
                
                // Calcular estad√≠sticas
                const totalUsuarios = usuarios.length;
                const usuariosActivos = usuarios.filter(u => u.activo).length;
                const estudiantes = usuarios.filter(u => u.rol === 'estudiante').length;
                const administradores = usuarios.filter(u => u.rol === 'administrador').length;
                
                // Actualizar las tarjetas
                document.getElementById('total-usuarios').textContent = totalUsuarios;
                document.getElementById('usuarios-activos').textContent = usuariosActivos;
                
                // Cargar materias y previas
                try {
                    const materiasResponse = await fetch('/admin/api/materias', {
                        credentials: 'same-origin'
                    });
                    if (materiasResponse.ok) {
                        const data = await materiasResponse.json();
                        // Manejar tanto la nueva estructura con paginaci√≥n como la antigua
                        const totalMaterias = data.pagination ? data.pagination.totalMaterias : data.length;
                        document.getElementById('total-materias').textContent = totalMaterias;
                    } else {
                        document.getElementById('total-materias').textContent = '0';
                    }
                } catch (e) {
                    console.log('Error cargando materias:', e);
                    document.getElementById('total-materias').textContent = '0';
                }
                
                try {
                    const previasResponse = await fetch('/admin/api/previas', {
                        credentials: 'same-origin'
                    });
                    if (previasResponse.ok) {
                        const data = await previasResponse.json();
                        // Manejar tanto la nueva estructura con paginaci√≥n como la antigua
                        const totalPrevias = data.pagination ? data.pagination.totalPrevias : data.length;
                        document.getElementById('total-previas').textContent = totalPrevias;
                    } else {
                        document.getElementById('total-previas').textContent = '0';
                    }
                } catch (e) {
                    console.log('Error cargando previas:', e);
                    document.getElementById('total-previas').textContent = '0';
                }
                
                // Actualizar gr√°fico de distribuci√≥n
                actualizarGraficoUsuarios({
                    estudiantes: estudiantes,
                    administradores: administradores
                });
                
            } catch (error) {
                console.error('Error cargando estad√≠sticas:', error);
                // Mostrar valores por defecto en caso de error
                document.getElementById('total-usuarios').textContent = '0';
                document.getElementById('total-materias').textContent = '0';
                document.getElementById('total-previas').textContent = '0';
                document.getElementById('usuarios-activos').textContent = '0';
                
                // Mostrar notificaci√≥n de error
                mostrarNotificacion('Error', error.message);
            }
        }

        async function cargarActividadReciente() {
            try {
                const response = await fetch('/admin/api/actividad-reciente', {
                    credentials: 'same-origin'
                });
                
                if (!response.ok) {
                    if (response.status === 401) {
                        throw new Error('No est√°s autenticado. Por favor, inicia sesi√≥n nuevamente.');
                    } else if (response.status === 403) {
                        throw new Error('No tienes permisos de administrador.');
                    } else {
                        throw new Error(`Error del servidor: ${response.status}`);
                    }
                }
                
                const actividades = await response.json();
                
                console.log('Actividad reciente cargada:', actividades);
                
                const container = document.getElementById('actividad-reciente');
                container.innerHTML = '';
                
                if (actividades.length === 0) {
                    container.innerHTML = `
                        <div class="text-center py-8 text-slate-500">
                            <i class="fas fa-inbox text-4xl mb-4"></i>
                            <p>No hay actividad reciente</p>
                        </div>
                    `;
                    return;
                }
                
                actividades.forEach(actividad => {
                    const tiempoTranscurrido = calcularTiempoTranscurrido(actividad.fecha);
                    
                    const actividadElement = document.createElement('div');
                    actividadElement.className = `activity-item ${actividad.color}`;
                    actividadElement.innerHTML = `
                        <div class="activity-icon ${actividad.color}">
                            <i class="fas fa-${actividad.icono} text-white"></i>
                        </div>
                        <div class="activity-content">
                            <p class="activity-title">${actividad.titulo}</p>
                            <p class="activity-description">${actividad.descripcion}</p>
                            <p class="activity-time">${tiempoTranscurrido}</p>
                        </div>
                        <span class="activity-badge ${actividad.color}">${actividad.tipo}</span>
                    `;
                    
                    container.appendChild(actividadElement);
                });
                
            } catch (error) {
                console.error('Error cargando actividad reciente:', error);
                const container = document.getElementById('actividad-reciente');
                container.innerHTML = `
                    <div class="text-center py-8 text-red-500">
                        <i class="fas fa-exclamation-triangle text-4xl mb-4"></i>
                        <p>Error cargando actividad reciente</p>
                        <p class="text-sm mt-2">${error.message}</p>
                    </div>
                `;
            }
        }

        function calcularTiempoTranscurrido(fecha) {
            const ahora = new Date();
            const fechaActividad = new Date(fecha);
            const diferencia = ahora - fechaActividad;
            
            const minutos = Math.floor(diferencia / (1000 * 60));
            const horas = Math.floor(diferencia / (1000 * 60 * 60));
            const dias = Math.floor(diferencia / (1000 * 60 * 60 * 24));
            
            if (minutos < 1) {
                return 'Hace un momento';
            } else if (minutos < 60) {
                return `Hace ${minutos} minuto${minutos > 1 ? 's' : ''}`;
            } else if (horas < 24) {
                return `Hace ${horas} hora${horas > 1 ? 's' : ''}`;
            } else if (dias < 7) {
                return `Hace ${dias} d√≠a${dias > 1 ? 's' : ''}`;
            } else {
                return fechaActividad.toLocaleDateString('es-ES');
            }
        }

        let usersChart = null;

        function inicializarGraficos() {
            // Gr√°fico de usuarios por rol
            const usersCtx = document.getElementById('usersChart').getContext('2d');
            usersChart = new Chart(usersCtx, {
                type: 'doughnut',
                data: {
                    labels: ['Estudiantes', 'Administradores'],
                    datasets: [{
                        data: [0, 0], // Se actualizar√° con datos reales
                        backgroundColor: [
                            '#059669', // Verde esmeralda para estudiantes
                            '#dc2626'  // Rojo para administradores
                        ],
                        borderWidth: 0,
                        hoverOffset: 10
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            position: 'bottom',
                            labels: {
                                padding: 20,
                                usePointStyle: true
                            }
                        }
                    }
                }
            });

            // Gr√°fico de actividad mensual
            const activityCtx = document.getElementById('activityChart').getContext('2d');
            new Chart(activityCtx, {
                type: 'line',
                data: {
                    labels: ['Ene', 'Feb', 'Mar', 'Abr', 'May', 'Jun'],
                    datasets: [{
                        label: 'Usuarios Activos',
                        data: [120, 135, 150, 145, 160, 175],
                        borderColor: '#059669',
                        backgroundColor: 'rgba(5, 150, 105, 0.1)',
                        borderWidth: 3,
                        fill: true,
                        tension: 0.4,
                        pointBackgroundColor: '#059669',
                        pointBorderColor: '#ffffff',
                        pointBorderWidth: 2,
                        pointRadius: 6
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            display: false
                        }
                    },
                    scales: {
                        y: {
                            beginAtZero: true,
                            grid: {
                                color: 'rgba(0, 0, 0, 0.05)'
                            }
                        },
                        x: {
                            grid: {
                                display: false
                            }
                        }
                    }
                }
            });
        }

        function actualizarGraficoUsuarios(distribucion) {
            console.log('Actualizando gr√°fico con datos:', distribucion);
            
            if (!usersChart) {
                console.log('El gr√°fico no est√° inicializado');
                return;
            }
            
            if (!distribucion) {
                console.log('No hay datos de distribuci√≥n');
                return;
            }
            
            const estudiantes = distribucion.estudiantes || 0;
            const administradores = distribucion.administradores || 0;
            
            console.log(`Estudiantes: ${estudiantes}, Administradores: ${administradores}`);
            
            // Actualizar los datos del gr√°fico
            usersChart.data.datasets[0].data = [estudiantes, administradores];
            
            // Actualizar el gr√°fico
            usersChart.update('active');
            
            console.log('Gr√°fico actualizado correctamente');
        }
    </script>
</body>
</html>